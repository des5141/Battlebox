<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chr_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_chr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sex=irandom(1)
hair=sex*8+irandom(7)
walk=0
c_hair=irandom(16777215)
spd=6
look=1
jump=0
upper=0
under=0
player=0
job=0
job_grade=0
job_send=0

left=''
right=''
body=''

attack_left=0
attack_right=0
motion_left=0
motion_right=0
left_send=motion_left
right_send=motion_right

attack_delay=0
attack_check_left=0
attack_check_right=0
dead_wait=-1
stun_time=0

state_power=0

hp_max=100
hp_hit=100
hp=100
hp_sub=0
stamina_max=100
stamina=100

alarm[0]=3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if player=sk_get_my_player_id()
{
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,4,3,sex,hair,c_hair)
sk_message_sadd(simple_string,3,body,left,right)
sk_message_send()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var splay;
splay=-1

if sk_get_my_player_id()=player
{

var k_r,k_l,k_d,k_d_p,k_jmp;
if stun_time&lt;=0
{
k_r=keyboard_check(vk_right)
k_l=keyboard_check(vk_left)
k_d=keyboard_check(vk_down)
k_d_p=keyboard_check_pressed(vk_down)
k_jmp=keyboard_check_pressed(ord('C'))
}
else
{
stun_time-=1
k_r=0
k_l=0
k_d=0
k_d_p=0
k_jmp=0
}

if system.chat=0 and system.mail_check=0 and inven.book_open=''
{

var i;
for(i=0;i&lt;10;i+=1)
{
if place_meeting(x,y,p_stair)=1
{
var att;
att=instance_nearest(x,y-16,p_stair)
att.x=0
att.y=0
}
}




x+=k_r*spd*(place_meeting(x+spd,y,p_wall)=0)-k_l*spd*(place_meeting(x-spd,y,p_wall)=0)

if x!=xprevious{walk+=1}else{walk=0}

if k_r{look= 1}
if k_l{look=-1}


if k_d_p and system.mode=0 and place_meeting(x,y+1,p_floor)=1
{
if place_meeting(x,y,obj_up){sk_instance_create(x,y,splay_door) y-=1280 sk_instance_create(x,y,splay_door) inven._shop=0}
else{if place_meeting(x,y,obj_down){sk_instance_create(x,y,splay_door) y+=1280 sk_instance_create(x,y,splay_door) inven._shop=0}}
}

}//////////////////////


if k_jmp=1 and jump=0
{
if k_d=0{upper=8}
if k_d=1 and place_meeting(x,y+1,p_wall)=0{y+=2}
}


if place_meeting(x,y+1,p_floor){jump=0 under=0}else{jump=1 walk=12}

view_xview=x-320
view_yview=y-240

if upper&gt;0
{
if place_meeting(x,y-upper,p_wall)=0{y-=upper}
upper-=0.5
if place_meeting(x,y-upper,p_wall){upper=0}
under=0
}
if upper=0 and jump=1
{
under+=1
if place_meeting(x,y+under,p_floor)=0{y+=under}else
{
var att;
att=instance_place(x,y+under,p_floor)
y=att.y-17
jump=0
under=0
}
}

while(place_meeting(x,y,p_wall)){y-=1}


if attack_delay&lt;=0
{
if keyboard_check_pressed(ord('X'))=1 and system.chat=0 and system.mail_check=0
{
if left!=''{attack_delay=max(round(item_weapon_delay(left,2)*(1-system.s_agi*0.001)),5)}
if left =''{attack_delay=0}

if attack_delay!=0
{
attack_left=max(round(item_weapon_delay(left,0)*(1-system.s_agi*0.001)),3)
motion_left=1
}
}

if keyboard_check_pressed(ord('V'))=1 and system.chat=0 and system.mail_check=0
{
if right!=''{attack_delay=max(round(item_weapon_delay(right,2)*(1-system.s_agi*0.001)),3)}
if right =''{attack_delay=0}

if attack_delay!=0
{
attack_right=max(round(item_weapon_delay(right,0)*(1-system.s_agi*0.001)),3)
motion_right=1
}
}
}else{attack_delay-=1}


if distance_to_object(p_sound)&lt;320
{
var att;
att=instance_nearest(x,y,p_sound)
sound_play(att.sound)
with(att){instance_destroy()}
}


if attack_left&gt;0
{
attack_left-=1
}
if attack_left=0
{
switch(motion_left)
{
case 1:
{
attack_check_left=1
attack_left=max(round(item_weapon_delay(left,1)*(1-system.s_agi*0.001)),3)
motion_left=2
var dmg,stun,att;
dmg=item_point(left)*(1+system.s_str*0.02)
stun=0
att=instance_create(x+look*16,y,eff_attack_mask)
att.target=player
att.dmg=dmg
att.stun=stun
att.image_xscale=look
}
break
case 2:
{
attack_left=-1
motion_left=0
}
break
}
}

if attack_right&gt;0
{
attack_right-=1
}
if attack_right=0
{
switch(motion_right)
{
case 1:
{
attack_check_right=1
attack_right=max(round(item_weapon_delay(right,1)*(1-system.s_agi*0.001)),3)
motion_right=2
if item_weapon_type(right)=6
{
var att;
att=instance_create(x,y,eff_shield_mask)
att.target=id
}
}
break
case 2:
{
attack_right=-1
motion_right=0
}
break
}
}



if place_meeting(x,y,obj_item)
{
var target;
target=instance_nearest(x,y,obj_item)
if target.player=player or target.player=0
{
if keyboard_check_pressed(vk_down)
{
item_add(target.item)
with(target){sk_instance_destroy(global_id)}
}
}
}

spd=min(round(4*(1+system.s_agi*0.001)),6)*(1+(system.mode!=0)*0.2)

if place_meeting(x,y,eff_attack_mask)=1
{
var dmg,stun,att;
att=instance_nearest(x,y,eff_attack_mask)
dmg=att.dmg
stun=att.stun
if att.target=0 and place_meeting(x,y,eff_shield_mask)=0
{
hp-=max(dmg-item_point(body),1)
stun_time=max(stun_time,stun)
}
}

if hp&lt;=0
{
if dead_wait=-1{dead_wait=90}
dead_wait-=1
if dead_wait=0
{
if system.pvp_player_obj!=0
{
hp=100
sk_message_save(0,system.pvp_player_obj.player)
sk_message_sadd(simple_int,1,23)
sk_message_send()
adr_show_message(system.pvp_player_obj.name+'��(��)�� �������� ����� �й��߽��ϴ�.')
system.pvp_start=0
system.pvp_player_obj=0
}
else
{
x=xstart
y=ystart
hp=1
}
}
}

hp=min(hp_hit,hp+hp_max*0.001)
hp_hit=max(min(hp_max,hp_hit),1)
stamina=min(stamina_max,stamina+stamina_max*0.002)
stamina_max=100+system.s_end*0.2

if hp_max!=100+system.s_end*0.5
{
var check;
check=0
if hp_hit=hp_max{check=1}
hp_max=100+system.s_end*0.5
if check=1{hp_hit=hp_max}
}

if hp_sub!=hp
{
if hp_sub&gt;hp{hp_hit-=(hp_sub-hp)*0.2}
hp=min(hp_hit,hp)
hp_sub=hp
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,4,6,hp_max,round(hp_hit),round(hp))
sk_message_send()
}


if body!=system.body or left!=system.left or right!=system.right
{
body=system.body
left=system.left
right=system.right
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,1,1)
sk_message_sadd(simple_string,3,body,left,right)
sk_message_send()
}

if left_send!=motion_left
{
left_send=motion_left
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,2,2,motion_left)
sk_message_send()
}

if right_send!=motion_right
{
right_send=motion_right
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,2,4,motion_right)
sk_message_send()
}

if (x!=xprevious or y!=yprevious)or(x=0 or y=0)
{
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,4,0,x,y,walk)
sk_message_send()
}

if state_power!=system.state_power
{
state_power=system.state_power
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,3,5,state_power,hp_max)
sk_message_send()
}

if job_send=1
{
job_send=0
sk_space_message_save(0,-1,obj_chr,player)
sk_message_sadd(simple_int,3,7,job,job_grade)
sk_message_send()
}


system.mail_check=0

}
else
{
if sk_space_message_check(player)=0{walk=0}

if (x-xprevious)&gt;0{look= 1}
if (x-xprevious)&lt;0{look=-1}

if place_meeting(x,y,eff_attack_mask)=1
{
var dmg,stun,att;
att=instance_nearest(x,y,eff_attack_mask)
dmg=att.dmg
stun=att.stun
if att.target=sk_get_my_player_id(){system.k_com+=1 system.save_state=1}
sk_message_save(0,player)
sk_message_sadd(simple_int,4,18,dmg,stun,att.target)
sk_message_send()
}

if position_meeting(mouse_x,mouse_y,self) and mouse_check_button_pressed(mb_left) and system.pvp_start=0 and system.trade_player=0
{
var att;att=instance_create(x,y,obj_com_menu)
att.target=id
}
}


if motion_left=2 and attack_check_left=1
{
attack_check_left=0
var att;
att=instance_create(x,y,eff_attack_effect)
att.image_xscale=look
att.image_single=item_weapon_type(left)
}

if motion_right=2 and attack_check_right=1
{
attack_check_right=0
var att;
att=instance_create(x,y,eff_attack_effect)
att.image_xscale=look
att.image_single=item_weapon_type(right)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sk_space_message_check(player)
{
switch(sk_get_message_var(simple_int,0))
{
case 0:
{
x=sk_get_message_var(simple_int,1)
y=sk_get_message_var(simple_int,2)
walk=sk_get_message_var(simple_int,3)
}
break
case 1:
{
body=sk_get_message_var(simple_string,0)
left=sk_get_message_var(simple_string,1)
right=sk_get_message_var(simple_string,2)
}
break
case 3:
{
sex=sk_get_message_var(simple_int,1)
hair=sk_get_message_var(simple_int,2)
c_hair=sk_get_message_var(simple_int,3)
body=sk_get_message_var(simple_string,0)
left=sk_get_message_var(simple_string,1)
right=sk_get_message_var(simple_string,2)
}
break
case 2:
{
motion_left=sk_get_message_var(simple_int,1)
if motion_left=2{attack_check_left=1}
}
break
case 4:
{
motion_right=sk_get_message_var(simple_int,1)
if motion_right=2{attack_check_right=1}
}
break
case 5:
{
state_power=sk_get_message_var(simple_int,1)
hp_max=sk_get_message_var(simple_int,2)
}
break
case 6:
{
hp_max=sk_get_message_var(simple_int,1)
hp_hit=sk_get_message_var(simple_int,2)
hp=sk_get_message_var(simple_int,3)
}
break
case 7:
{
job=sk_get_message_var(simple_int,1)
job_grade=sk_get_message_var(simple_int,2)
}
break
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var look_set1,look_set2,draw_pos1,draw_pos2;


if motion_left=0{look_set1=-look}else{look_set1=look}
look_set2=look

if motion_left=0{draw_pos1=x-16*look_set1}else{draw_pos1=x-8*look_set1}
draw_pos2=x-16*look_set2





draw_sprite_ext(spr_chr_body,sex,x,y,look,1,0,c_white,1)
draw_sprite_ext(spr_chr_hair,hair,x,y,look,1,0,c_hair,1)
draw_sprite_ext(spr_chr_leg,walk,x,y,look,1,0,c_white,1)

draw_item(body,x-16*look,y-16,look)




draw_item(right,draw_pos2,y-16,look_set2,motion_right)
draw_item(left,draw_pos1,y-16,look_set1,motion_left)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

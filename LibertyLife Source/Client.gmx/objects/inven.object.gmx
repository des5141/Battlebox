<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-16</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>money=0
var i,j;
i=0 j=0
for(i=0;i&lt;5;i+=1)
{
for(j=0;j&lt;10;j+=1)
{
it[i,j]=''
}
}

open=0
it_show=''
it_mouse=''
it_i=0
it_j=0


trade=0
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
tr_out[i,j]=''
tr_in[i,j]=''
}}
tr_out_money=0
tr_out_money_sub=''
tr_in_money=0
tr_ready=0
tr_in_ready=0

_shop=0

for(i=0;i&lt;5;i+=1){for(j=i;j&lt;5;j+=1)
{
shop[i,j]=''
}}

for(i=0;i&lt;10;i+=1)
{
hot[i]=''
}

con=0

book_open=''
page=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var t_check,t_check2;
t_check=1
t_check2=1

if room=room_hometown
{

if keyboard_check_pressed(ord('I')){if open=1{open=0}else{open=1}}
if open
{
var i,j,bx,by;
bx=view_xview
by=view_yview+128

it_show=''

for(i=0;i&lt;5;i+=1)
{
if mouse_x&gt;bx+i*32 and mouse_x&lt;bx+i*32+32
{
for(j=0;j&lt;10;j+=1)
{
if mouse_y&gt;by+j*32 and mouse_y&lt;by+j*32+32
{
it_show=it[i,j]

if mouse_check_button_pressed(mb_left)
{
if it_mouse=''
{
it_mouse=it[i,j]
it_i=i
it_j=j
it[i,j]=''
}
else
{
if it[i,j]=''
{
it[i,j]=it_mouse
it_mouse=''
}
else
{
if item_type(it[i,j])=4 and item_type(it_mouse)=4 and item_index(it[i,j])=item_index(it_mouse)
{
it[i,j]=item_create(4,item_index(it[i,j]),item_point(it[i,j]),item_condition(it[i,j]),item_count(it[i,j])+item_count(it_mouse),'ffffff','ffffff','ffffff')
it_mouse=''
}
else
{
var sub;
sub=it_mouse
it_mouse=it[i,j]
it_i=i
it_j=j
it[i,j]=sub
}
}
}
}

if mouse_check_button_pressed(mb_right)
{
if item_type(it[i,j])=4
{
if it_mouse=''
{
it_mouse=item_create(4,item_index(it[i,j]),item_point(it[i,j]),item_condition(it[i,j]),1,'ffffff','ffffff','ffffff')
it_i=-1
it_j=-1
if item_count(it[i,j])-1=0
{it[i,j]=''}
else
{it[i,j]=item_create(4,item_index(it[i,j]),item_point(it[i,j]),item_condition(it[i,j]),item_count(it[i,j])-1,'ffffff','ffffff','ffffff')}
}
else
{
if item_index(it_mouse)=item_index(it[i,j])
{
it_mouse=item_create(4,item_index(it_mouse),item_point(it_mouse),item_condition(it_mouse),item_count(it_mouse)+1,'ffffff','ffffff','ffffff')
it_i=-1
it_j=-1
if item_count(it[i,j])-1=0
{it[i,j]=''}
else
{it[i,j]=item_create(4,item_index(it[i,j]),item_point(it[i,j]),item_condition(it[i,j]),item_count(it[i,j])-1,'ffffff','ffffff','ffffff')}
}
}
}
else
{
item_use(it[i,j])
}
}

}
}
}
}


if trade=1
{
var bx,by,i,j,tr_check;
tr_check=0
bx=view_xview+320-64;
by=view_yview+240-96;
if mouse_check_button_pressed(mb_left)
{
for(i=0;i&lt;4;i+=1)
{
if mouse_x&gt;bx+32*i and mouse_x&lt;bx+32+32*i
{
for(j=0;j&lt;2;j+=1)
{
if mouse_y&gt;by+16+32*j and mouse_y&lt;by+48+32*j
{
t_check=0
tr_check=1
if it_mouse=''
{
it_mouse=tr_out[i,j]
it_i=-1
it_j=-1
tr_out[i,j]=''
}
else
{
var temp;
temp=it_mouse
it_mouse=tr_out[i,j]
it_i=-1
it_j=-1
tr_out[i,j]=temp
}
}
}
}
}
}
switch(con)
{
case 0:break
case 1:
tr_out_money_sub=keyboard_string+kor_get_koring()
if(mouse_check_button_pressed(mb_left)=1 or keyboard_check_pressed(vk_enter)=1)and t_check2=1
{
con=0
tr_check=0
if tr_out_money_sub=''{tr_out_money_sub='0'}
var str_len,i;
str_len=string_length(tr_out_money_sub)
for(i=0;i&lt;str_len;i+=1)
{
var char;
char=ord(string_char_at(tr_out_money_sub,i+1))
if char&lt;48 or char&gt;57{tr_out_money_sub=string(tr_out_money) break}
}
tr_out_money=real(tr_out_money_sub)

kor_backspace()
}
break
case 2:
{
con=0
tr_ready=(tr_ready==0)
sk_message_save(0,system.trade_player)
sk_message_sadd(simple_int,2,37,tr_ready)
sk_message_send()
}
break
case 3:
{
con=0
var i,j;
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
item_add(tr_out[i,j])
tr_out[i,j]=''
}}
tr_out_money=0
tr_check=1
}
break
case 4:
con=0
sk_message_save(0,system.trade_player)
sk_message_sadd(simple_int,1,35)
sk_message_send()
trade=0
var i,j;
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
item_add(tr_out[i,j])
tr_out[i,j]=''
}}
tr_out_money=0
system.trade_player=0
break
}
if mouse_x&gt;bx+32 and mouse_x&lt;bx+128 and mouse_y&gt;by+80 and mouse_y&lt;by+96 and mouse_check_button_pressed(mb_left)=1
{
con=1
keyboard_string=''
t_check2=0
}
if mouse_x&gt;bx and mouse_x&lt;bx+32 and mouse_y&gt;by+96 and mouse_y&lt;by+112 and mouse_check_button_pressed(mb_left)=1
{
con=2
}
if mouse_x&gt;bx+32 and mouse_x&lt;bx+64 and mouse_y&gt;by+96 and mouse_y&lt;by+112 and mouse_check_button_pressed(mb_left)=1 and con!=1
{
con=3
}
if mouse_x&gt;bx+96 and mouse_x&lt;bx+128 and mouse_y&gt;by+96 and mouse_y&lt;by+112 and mouse_check_button_pressed(mb_left)=1 and con!=1
{
con=4
}

if tr_check=1
{
tr_ready=0
sk_message_save(0,system.trade_player)
sk_message_sadd(simple_int,2,36,tr_out_money)
var i,j
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
sk_message_sadd(simple_string,1,tr_out[i,j])
}}
sk_message_send()
}

if tr_ready=1 and tr_in_ready=1
{
var i,j;
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
if tr_in[i,j]!=''
{
item_add(tr_in[i,j])
tr_in[i,j]=''
}
}}
item_money_add(tr_in_money)
item_money_add(-tr_out_money)
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
tr_out[i,j]=''
}}
tr_out_money=0
system.trade_player=0
trade=0
tr_ready=0
tr_in_ready=0
}
}


if _shop
{
var bx,by,i,j;
bx=view_xview+640-160
by=view_yview+128
if mouse_check_button_pressed(mb_left)
{
for(i=0;i&lt;5;i+=1)
{
if mouse_x&gt;bx+i*32 and mouse_x&lt;bx+32+i*32
{
for(j=0;j&lt;5;j+=1)
{
if mouse_y&gt;by+j*32 and mouse_y&lt;by+32+j*32
{
if it_mouse=''
{
if item_money_out()&gt;=item_cost(shop[i,j])
{
item_money_add(-item_cost(shop[i,j]))
item_add(shop[i,j])
}
}
else
{
item_money_add(item_cost(it_mouse))
it_mouse=''
}
}
}
}
}
}
}

bx=view_xview+160
by=view_yview+480-32

if mouse_check_button_pressed(mb_left)
{
for(i=0;i&lt;10;i+=1)
{
if mouse_x&gt;bx+32*i and mouse_x&lt;bx+32+32*i and mouse_y&gt;by and mouse_y&lt;by+32
{
if it_mouse!=''
{
if it_i=-1{item_add(it_mouse)}
else{it[it_i,it_j]=it_mouse}
hot[i]=it_mouse
it_mouse=''
}
else
{
hot[i]=''
}
}
}
}



bx=view_xview+320-96
by=view_yview+240-88

if system.mail_check!=0
{
if mouse_x&gt;bx+64 and mouse_x&lt;bx+96 and mouse_y&gt;by+144 and mouse_y&lt;by+176 and mouse_check_button_pressed(mb_left) and system.mail_check.mode=1
{
var att,i,j;
att=system.mail_check
if it_mouse=''
{
it_mouse=att.item
it_i=i
it_j=j
att.item=''
t_check=0
}
else
{
att.item=it_mouse
it_mouse=''
}
}
}

bx=view_xview
by=view_yview+32


if t_check=1
{


if mouse_check_button_pressed(mb_left)
{
if open=0 or((mouse_x&gt;view_xview and mouse_x&lt;view_xview+96 and mouse_y&gt;view_yview+32 and mouse_y&lt;view_yview+64)=0 and(mouse_x&gt;view_xview and mouse_x&lt;view_xview+160 and mouse_y&gt;view_yview+128 and mouse_y&lt;view_yview+480)=0)
{
if it_mouse!=''
{
sk_message_save(0,0)
sk_message_sadd(simple_int,2,15,0)
sk_message_sadd(simple_string,3,it_mouse,string(system.chr_target.x),string(system.chr_target.y))
sk_message_send()
it_mouse=''
system.save_inventory=1
}
}
}



if mouse_y&gt;by and mouse_y&lt;by+32
{
if mouse_x&gt;bx+32*0 and mouse_x&lt;bx+32+32*0{it_show=system.left}
if mouse_x&gt;bx+32*1 and mouse_x&lt;bx+32+32*1{it_show=system.body}
if mouse_x&gt;bx+32*2 and mouse_x&lt;bx+32+32*2{it_show=system.right}

if mouse_x&gt;bx+32*0 and mouse_x&lt;bx+32+32*2
{
if mouse_check_button_pressed(mb_left)
{
if it_mouse=''
{
if mouse_x&gt;bx+32*0 and mouse_x&lt;bx+32+32*0{it_mouse=system.left system.left=''}
if mouse_x&gt;bx+32*1 and mouse_x&lt;bx+32+32*1{it_mouse=system.body system.body=''}
if mouse_x&gt;bx+32*2 and mouse_x&lt;bx+32+32*2{it_mouse=system.right system.right=''}
}
else
{
if mouse_x&gt;bx+32*0 and mouse_x&lt;bx+32+32*0
{
if item_type(it_mouse)=1 and item_weapon_type(it_mouse)!=6
{
system.save_inventory=1
if system.left=''
{
system.left=it_mouse
it_mouse=''
}
else
{
var sub;
sub=it_mouse
it_mouse=system.left
it_i=-1
it_j=-1
system.left=sub
}
}
}
if mouse_x&gt;bx+32*1 and mouse_x&lt;bx+32+32*1
{
if item_type(it_mouse)=2
{
system.save_inventory=1
if system.body=''
{
system.body=it_mouse
it_mouse=''
}
else
{
var sub;
sub=it_mouse
it_mouse=system.body
it_i=-1
it_j=-1
system.body=sub
}
}
}
if mouse_x&gt;bx+32*2 and mouse_x&lt;bx+32+32*2
{
if item_type(it_mouse)=1 and item_weapon_type(it_mouse)=6
{
system.save_inventory=1
if system.right=''
{
system.right=it_mouse
it_mouse=''
}
else
{
var sub;
sub=it_mouse
it_mouse=system.right
it_i=-1
it_j=-1
system.right=sub
}
}
}
}
}
}
}


}



}
}else{open=0}


if system.chat=0
{
for(i=0;i&lt;10;i+=1)
{
if keyboard_check_pressed(ord('1')+i)
{
item_use(hot[i])
if item_search_i(hot[i])=-1{hot[i]=''}
else{hot[i]=inven.it[item_search_i(hot[i]),item_search_j(hot[i])]}
}
}
}


if book_open!=''
{

var bx,by;
bx=view_xview+320-128
by=view_yview+240-80

if mouse_check_button_pressed(mb_left)
{
if mouse_x&gt;bx+176 and mouse_x&lt;bx+208 and mouse_y&gt;by+32 and mouse_y&lt;by+64
{
book_need_create(book_open,page)
}
else
{
if mouse_x&gt;bx and mouse_x&lt;bx+128 and mouse_y&gt;by and mouse_y&lt;by+160
{
page-=1
sound_play(sou_book)
}
if mouse_x&gt;bx+128 and mouse_x&lt;bx+256 and mouse_y&gt;by and mouse_y&lt;by+160
{
page+=1
sound_play(sou_book)
}
}
}

if keyboard_check_pressed(vk_left){page-=1 sound_play(sou_book)}
if keyboard_check_pressed(vk_right){page+=1 sound_play(sou_book)}
page=max(1,min(page,book_max_page(book_open)))

}


if trade=1 or _shop=1{open=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=room_hometown
{

if open
{

var bx,by,i,j;
bx=view_xview
by=view_yview+128

draw_sprite(spr_inventory,system.option_interface_color,bx,by)

for(i=0;i&lt;5;i+=1){for(j=0;j&lt;10;j+=1)
{
draw_item(it[i,j],bx+i*32,by+j*32,1,-1)
}}

bx=view_xview
by=view_yview+32

draw_sprite(spr_equip,system.option_interface_color,bx,by)
draw_item(system.left,bx+32*0,by,1,-1)
draw_item(system.body,bx+32*1,by,1,-1)
draw_item(system.right,bx+32*2,by,1,-1)

sex_draw_text(bx+34,by+34,string(item_money_out()))

if it_show!=''{item_show_state(it_show,mouse_x,mouse_y)}

}

if trade
{
var bx,by,i,j;
bx=view_xview+320-64
by=view_yview+240-96
draw_sprite(spr_trade,system.option_interface_color,bx,by)
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
draw_item(tr_out[i,j],bx+i*32,by+16+j*32,1,-1)
draw_item(tr_in[i,j],bx+i*32,by+112+j*32,1,-1)
}}
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
if mouse_x&gt;bx+i*32 and mouse_x&lt;bx+i*32+32 and mouse_y&gt;by+16+j*32 and mouse_y&lt;by+48+j*32{if tr_out[i,j]!=''{item_show_state(tr_out[i,j],mouse_x,mouse_y)}}
if mouse_x&gt;bx+i*32 and mouse_x&lt;bx+i*32+32 and mouse_y&gt;by+112+j*32 and mouse_y&lt;by+144+j*32{if tr_in[i,j]!=''{item_show_state(tr_in[i,j],mouse_x,mouse_y)}}
}}
if con=1
{
if system.t mod 30&lt;15{tr_out_money_sub+='|'}
sex_draw_text(bx+34,by+82,tr_out_money_sub)
}
else
{sex_draw_text(bx+34,by+82,string(tr_out_money))}
sex_draw_text(bx+34,by+178,string(tr_in_money))

draw_sprite_ext(spr_dot,0,bx,by+16,128,80,0,c_black,0.5*(tr_ready==1))
draw_sprite_ext(spr_dot,0,bx,by+112,128,80,0,c_black,0.5*(tr_in_ready==1))
}

if _shop
{
var bx,by,i,j;
bx=view_xview+640-160
by=view_yview+128
draw_sprite(spr_shop,system.option_interface_color,bx,by)
for(i=0;i&lt;5;i+=1){for(j=0;j&lt;5;j+=1)
{
draw_item(shop[i,j],bx+i*32,by+j*32,1,-1)
}}
for(i=0;i&lt;5;i+=1){for(j=0;j&lt;5;j+=1)
{
if mouse_x&gt;bx+i*32 and mouse_x&lt;bx+i*32+32 and mouse_y&gt;by+j*32 and mouse_y&lt;by+32+j*32{if shop[i,j]!=''{item_show_state(shop[i,j],mouse_x,mouse_y)}}
}}
}

{
var bx,by,i;
bx=view_xview+160
by=view_yview+480-32
draw_sprite(spr_hotkey,system.option_interface_color,bx,by)
for(i=0;i&lt;10;i+=1)
{
draw_item(hot[i],bx+32*i,by,0,-1)
}
}

if book_open!=''
{
book_page(book_open,page)
}

draw_item(it_mouse,mouse_x-16,mouse_y-16,1,-1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

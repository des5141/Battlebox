<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_chr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>monster_id=set_monster_id()

maxhp=20
hp=maxhp
sub_hp=hp
dmg=1
stun=0
attack_del=0
mbody=0
mbody_sub=0
stun_time=0

wait=0
spawn_time=600
attack_rate=0
attack=0

yspd=0


body=spr_monster01
leg=1
walk=0
look=1

spd=3

attack_delay=0

player=0
spawn=0
spawn_sub=0

move_del=0
stop=0

mark=0

target=id

alarm[0]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if player=0
{
system.monster_ai_client_set=1
}


if spawn=0
{
image_alpha=0

if distance_to_object(obj_chr)&lt;960 and wait=0
{
spawn=1
mark=instance_create(x,y,obj_enemy_mark)
mark.target=id
target=instance_nearest(x,y,obj_chr).id//set_monster_player()
//player=target.player
}
if wait&gt;0{wait-=1}
}
else
{
image_alpha=1
if instance_exists(target)=0
{
if distance_to_object(obj_chr)&lt;960
{
target=instance_nearest(x,y,obj_chr).id//set_monster_player()
//player=target.player
}
else
{
target=0
spawn=0
}
}


if player=sk_get_my_player_id()
{
system.cont=1
var tr;tr=instance_nearest(x,y,obj_chr).id
if distance_to_object(obj_chr)&lt;128
{
var mcheck;
mcheck=0
if distance_to_object(obj_chr)&gt;16{look=sign(tr.x-x) mcheck=1}
if distance_to_object(obj_chr)&lt;8{look=sign(x-tr.x) mcheck=1}
if place_meeting(x+spd*look,y,p_wall)=0 and place_meeting(x+spd*look,y+1,p_floor)=1 and mcheck=1{x+=spd*look}

if attack_delay&lt;=0
{
if distance_to_object(obj_chr)&lt;=16
{
attack=1
attack_delay=attack_del
}
}else{attack_delay-=1}

}
else
{
if move_del=0
{
move_del=30+irandom(30)
look=choose(-1,1)
stop=(stop==0)
}else{move_del-=1}

if place_meeting(x+spd*look*stop*0.5,y,p_wall)=0 and place_meeting(x+spd*look*stop*0.5,y+1,p_floor)=1{x+=spd*look*stop*0.5}
}
/*
if tr.y&lt;y and place_meeting(x,y+1,p_floor)
{
yspd=-8
}

if place_meeting(x,y+1,p_floor)=0
{
yspd+=1
}
if yspd!=0
{
if yspd&gt;0
{if place_meeting(x,y+yspd,p_floor)=0{y+=yspd}else{repeat(floor( yspd)){if place_meeting(x,y+1,p_floor)=0{y+=1}else{yspd=0 break}}}}
else
{if place_meeting(x,y+yspd,p_floor)=0 or place_meeting(x,y,p_stair)=1{y+=yspd}else{repeat(floor(-yspd)){if place_meeting(x,y-1,p_floor)=0{y-=1}else{yspd=0 break}}}}
}
*/

if attack_rate=0
{
if attack=3
{
attack=0
mbody=0
}

if attack=2
{
mbody=2
attack_rate=10
attack=3
var att;att=instance_create(x+16*look,y,eff_attack_mask)
att.target=0
att.dmg=dmg
att.stun=stun
}

if attack=1
{
mbody=1
attack_rate=5
attack=2
}
}else{attack_rate-=1}

if place_meeting(x,y,eff_attack_mask)=1
{
var dmg,stun,att;
att=instance_nearest(x,y,eff_attack_mask)
dmg=att.dmg
stun=att.stun
if att.target!=0
{
if att.target=sk_get_my_player_id(){system.k_com+=1 system.save_state=1}
hp-=max(dmg,1)
stun_time=max(stun_time,stun)
}
}

if hp&lt;=0
{
var att;att=instance_create(x,y,obj_monster_dead)
att.sprite_index=body
image_alpha=0
hp=maxhp
x=xstart
y=ystart
spawn=0
system.sub=id
mark.del=1
wait=spawn_time
target=0
sk_space_message_save(0,-1,p_monster,monster_id)
sk_message_sadd(simple_int,1,2)
sk_message_send()
}

if x!=xprevious or y!=yprevious
{
sk_space_message_save(0,-1,p_monster,monster_id)
sk_message_sadd(simple_int,3,0,x,y)
sk_message_send()
}

if sub_hp!=hp
{
sk_space_message_save(0,-1,p_monster,monster_id)
sk_message_sadd(simple_int,2,1,hp)
sk_message_send()
}

if mbody!=mbody_sub
{
mbody_sub=mbody
sk_space_message_save(0,-1,p_monster,monster_id)
sk_message_sadd(simple_int,2,4,mbody)
sk_message_send()
}


}
else
{
if place_meeting(x,y,eff_attack_mask)=1
{
var dmg,stun,att;
att=instance_nearest(x,y,eff_attack_mask)
dmg=att.dmg
stun=att.stun
if att.target!=0
{
if att.target=sk_get_my_player_id(){system.k_com+=1 system.save_state=1}
sk_space_message_save(0,-1,p_monster,monster_id)
sk_message_sadd(simple_int,3,3,dmg,stun)
sk_message_send()
}
}
}

if x!=xprevious{walk+=1}else{walk=0}
if place_meeting(x,y+1,p_floor)=0{walk=12}
if x&lt;xprevious{look=-1}
if x&gt;xprevious{look=1}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sk_space_message_check(monster_id)
{
switch(sk_get_message_var(simple_int,0))
{
case 0:
{
x=sk_get_message_var(simple_int,1)
y=sk_get_message_var(simple_int,2)
}
break
case 1:
{
hp=sk_get_message_var(simple_int,1)
}
break
case 2:
{
var att;att=instance_create(x,y,obj_monster_dead)
att.sprite_index=body
image_alpha=0
hp=maxhp
x=xstart
y=ystart
spawn=0
wait=spawn_time
target=0
}
break
case 3:
{
hp-=max(dmg,1)
stun_time=max(stun_time,stun)
}
break
case 4:
{
mbody=sk_get_message_var(simple_int,1)
}
break
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if leg=1{draw_sprite_ext(spr_chr_leg,walk,x,y,look,1,0,c_white,image_alpha)}
draw_sprite_ext(body,mbody,x,y,look,1,0,c_white,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

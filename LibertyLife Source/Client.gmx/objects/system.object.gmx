<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sk_set_39dll('118.41.21.27',1124)
sex_set_global()
tb_global()

__check_player=0

logon=0
ms_id=0
stop=0
name=''
job=0
job_grade=0

quest_log='0/0'

gender=0
hair=0
c_hair=0

left=''
right=''
body=''

s_str=0
s_end=0
s_agi=0
s_per=0
s_int=0

k_com=0
k_mas=0
k_mag=0
k_cra=0
k_fis=0

state_power=0

var i;
for(i=0;i&lt;20;i+=1)
{
mail_name[i]=''
mail_text[i]=''
mail_item[i]=''
mail_cost[i]=0
}

chr_target=0
mode=0 // 0 - normal // 1 - battle // 2 - sneak //
mode_delay=0

alarm[0]=1
alarm[1]=150


save_time=30*10
save_state=0
save_inventory=0
save_quest_log=0

option_interface_color=0

ini_open('rec.ini')
option_interface_color=ini_read_real('option','option_interface_color',0)
ini_close()



chat=0
chat_text=''
set_kor=kdll_kor

sub=0
check=0

pvp_player_obj=0
pvp_start=0
trade_player=0


monster_id=0
monster_ai_client_set=0
cont=0

t=0

mail_check=0

end_count=-1

acc=0

if sk_get_my_ip()=sk_get_server_ip(){acc=1}

for(i=0;i&lt;5;i+=1){fps_save[i]=30}
fps_check_del=0

han=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sk_get_my_ip()='Too frequent!' and acc=0
{
if sk_get_my_ip()!=sk_get_server_ip()
{
//adr_show_message('Ŭ���̾�Ʈ�� ���ÿ� �ϳ��� ����˴ϴ�.',0)
game_end()
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pvp_player_obj!=0{if instance_exists(pvp_player_obj)=0{pvp_player_object=0 pvp_start=0}}

while(sk_message_check())
{
switch(sk_get_message_var(simple_int,0))
{
case 2:
adr_show_message('������ �����Ǿ����ϴ�.',0)
break
case 3:
adr_show_message('�̸��� �ߺ��Ǿ����ϴ�.',0)
break
case 5:
logon=3
inven.money=sk_get_message_var(simple_int,3)
gender=sk_get_message_var(simple_int,1)
hair=sk_get_message_var(simple_int,2)
c_hair=real(sk_get_message_var(simple_string,0))
left=sk_get_message_var(simple_string,1)
right=sk_get_message_var(simple_string,2)
body=sk_get_message_var(simple_string,3)
s_str=sk_get_message_var(simple_ushort,0)
s_end=sk_get_message_var(simple_ushort,1)
s_agi=sk_get_message_var(simple_ushort,2)
s_per=sk_get_message_var(simple_ushort,3)
s_int=sk_get_message_var(simple_ushort,4)
k_com=sk_get_message_var(simple_ushort,5)
k_mas=sk_get_message_var(simple_ushort,6)
k_mag=sk_get_message_var(simple_ushort,7)
k_cra=sk_get_message_var(simple_ushort,8)
k_fis=sk_get_message_var(simple_ushort,9)
var i,j;
for(i=0;i&lt;5;i+=1){for(j=0;j&lt;10;j+=1)
{
inven.it[i,j]=sk_get_message_var(simple_string,4+i*10+j)
}}
quest_log=sk_get_message_var(simple_string,54)

ini_open('rec.ini')
ini_write_string('login','name',name)
ini_write_string('login','password',obj_iden.pass)
ini_close()

room_goto(room_hometown)
break
case 6:
adr_show_message('�̸��̳� ��ȣ�� �߸��ԷµǾ����ϴ�.',0)
break
case 7:
{
var att;
att=instance_create(0,0,obj_chr)
att.player=sk_get_message_send()
att.name=sk_get_message_var(simple_string,0)
att.body=sk_get_message_var(simple_string,1)
att.left=sk_get_message_var(simple_string,2)
att.right=sk_get_message_var(simple_string,3)
att.hair=sk_get_message_var(simple_int,1)
att.c_hair=sk_get_message_var(simple_int,2)
att.hp=100
att.look=1
}
break
case 8:
if room=room_hometown
{
var att;
att=instance_create(obj_spawn.x+random(128),obj_spawn.y+random(128-16),obj_chr)
att.player=sk_get_message_send()
att.name=sk_get_message_var(simple_string,0)
sk_message_save(0,sk_get_message_send())
sk_message_sadd(simple_int,3,7,hair,c_hair)
sk_message_sadd(simple_string,4,name,body,left,right)
sk_message_send()
}
break
case 10:
if room=sk_get_message_var(simple_int,4)
{
var att;
att=instance_create(sk_get_message_var(simple_int,1),sk_get_message_var(simple_int,2),sk_get_message_var(simple_int,3))
att.global_id=sk_get_message_var(simple_int,5)
}
break
case 11:
if room=room_hometown
{
with(obj_chr)
{
if player=sk_get_message_var(simple_int,1){
if system.pvp_player_obj!=0{if system.pvp_player_obj=id
{
adr_show_message(system.pvp_player_obj.name+'��(��) ��Ű��� �������� �����ƽ��ϴ�!')
system.pvp_player_obj=0
system.pvp_start=0
system.chr_target.hp=system.chr_target.hp_max
}}
if system.trade_player=player
{
system.trade_player=0
inven.trade=0
adr_show_message('�ŷ� ��밡 ��������ϴ�.',0)
}
instance_destroy()
}
}
if system.trade_player=sk_get_message_var(simple_int,1){system.trade_player=0}
}
break
case 13:
if room=room_hometown
{
var att;
att=instance_create(0,0,obj_chat)
with(obj_chr){if player=sk_get_message_send(){system.sub=id}}
att.target=sub
att.player=sk_get_message_var(simple_int,1)
att.text=sk_get_message_var(simple_string,0)
}
break
case 14:
if room=room_hometown
{
var att;
att=instance_create(real(sk_get_message_var(simple_string,1)),real(sk_get_message_var(simple_string,2)),obj_item)
att.item=sk_get_message_var(simple_string,0)
att.global_id=sk_get_message_var(simple_int,1)
}
break
case 16:
with(sk_get_message_var(simple_int,1))
{
if global_id=sk_get_message_var(simple_int,2){instance_destroy()}
}
break
case 18:
{
check=0
if sk_get_message_var(simple_int,3)=0{check=1}
if pvp_player_obj!=0{if pvp_player_obj.player=sk_get_message_var(simple_int,3) and pvp_start=1{check=1}}
with(chr_target){if place_meeting(x,y,eff_shield_mask){var att;att=instance_nearest(x,y,eff_shield_mask) if att.target=id{system.check=0}}}
if check=1
{
chr_target.hp-=max(sk_get_message_var(simple_int,1)-item_point(body),1)
chr_target.stun_time=max(chr_target.stun_time,sk_get_message_var(simple_int,2))
}
}
break
case 19:
{
if pvp_player_obj!=0
{
sk_message_save(0,sk_get_message_send())
sk_message_sadd(simple_int,1,22)
sk_message_sadd(simple_string,1,name)
sk_message_send()
}
else
{
system.ms_id=4
adr_show_message(sk_get_message_var(simple_string,0)+'���Լ� ��� ��û�� �Խ��ϴ�.',1)
with(obj_chr){if player=sk_get_message_send(){system.pvp_player_obj=id}}
}
}
break
case 20:
pvp_start=1
break
case 21:
adr_show_message(sk_get_message_var(simple_string,0)+'��(��) ����� �����Ͽ����ϴ�.')
pvp_player=0
pvp_start=0
break
case 22:
adr_show_message(sk_get_message_var(simple_string,0)+'��(��) �̹� ������Դϴ�.',0)
pvp_player=0
pvp_start=0
break
case 23:
adr_show_message(pvp_player_obj.name+'��(��)�� �������� ����� �¸��Ͽ����ϴ�.')
pvp_start=0
pvp_player_obj=0
chr_target.hp=chr_target.hp_max
break
case 25:
{
var i;
for(i=0;i&lt;10;i+=1)
{
mail_name[i]=sk_get_message_var(simple_string,0+i*3)
mail_text[i]=sk_get_message_var(simple_string,1+i*3)
mail_item[i]=sk_get_message_var(simple_string,2+i*3)
mail_cost[i]=sk_get_message_var(simple_int,1+i)
}
}
break
case 27:
adr_show_message('���� �Ϸ�.',0)
sk_message_save(0,0)
sk_message_sadd(simple_int,1,24)
sk_message_sadd(simple_string,1,name)
sk_message_send()
break
case 29:
{
with(obj_notice){instance_destroy()}
var att;
att=instance_create(0,0,obj_notice)
att.text=sk_get_message_var(simple_string,0)
}
break
case 30:
adr_show_message('���� �÷��̾� �Դϴ�.',0)
item_add(sk_get_message_var(simple_string,0))
item_money_add(sk_get_message_var(simple_int,1))
break
case 31:
p_monster.player=sk_get_message_var(simple_int,1)
break
case 33:
if system.trade_player=0
{
system.ms_id=5
adr_show_message(sk_get_message_var(simple_string,0)+'���� �ŷ��� ��û�߽��ϴ�.',1)
system.trade_player=sk_get_message_send()
}
else
{
sk_message_save(0,sk_get_message_send())
sk_message_sadd(simple_int,1,38)
sk_message_send()
}
break
case 34:
system.trade_player=sk_get_message_send()
inven.trade=1
break
case 35:
{
adr_show_message('�ŷ� ��û�� �������߽��ϴ�.',0)
system.trade_player=0
var i,j;
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
item_add(inven.tr_out[i,j])
inven.tr_out[i,j]=''
}}
inven.trade=0
}
break
case 36:
with(inven)
{
var i,j;
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
tr_in[i,j]=sk_get_message_var(simple_string,i*2+j)
}}
tr_in_money=sk_get_message_var(simple_int,1)
}
break
case 37:
with(inven)
{
tr_in_ready=sk_get_message_var(simple_int,1)
}
break
case 38:
adr_show_message('��밡 �̹� �ŷ����Դϴ�.',0)
break
}
}


alarm[0]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ms_id=0
t+=1

switch(logon)
{
case 0:

logon=1

if sk_socket_join('server',3){system.logon=2}
else{ms_id=2 adr_show_message('������ ���ῡ �����߽��ϴ�. �ٽ� �õ��Ͻðڽ��ϱ�?',1)}

break
case 3:



break
}


if sk_get_server_check()



stop=0
if instance_exists(obj_message){stop=1}






if save_time=0
{
save_time=30*10

if save_state=1
{
save_state=0
sk_message_save(0,0)
sk_message_sadd(simple_int,1,17)
sk_message_sadd(simple_string,1,name)
sk_message_sadd(simple_ushort,10,s_str,s_end,s_agi,s_per,s_int,k_com,k_mas,k_mag,k_cra,k_fis)
sk_message_send()
}

if save_inventory=1
{
save_inventory=0
sk_message_save(0,0)
sk_message_sadd(simple_int,2,12,inven.money)
sk_message_sadd(simple_string,4,name,left,right,body)
var i,j;
for(i=0;i&lt;5;i+=1){for(j=0;j&lt;10;j+=1)
{
sk_message_sadd(simple_string,1,inven.it[i,j])
}}
sk_message_send()
}

if save_quest_log=1
{
save_quest_log=0
sk_message_save(0,0)
sk_message_sadd(simple_int,1,39)
sk_message_sadd(simple_string,2,name,quest_log)
sk_message_send()
}

}else{save_time-=1}


if mail_check=0 and inven._shop=0
{

if keyboard_check_pressed(vk_enter) and room=room_hometown and instance_exists(obj_tb_main)=0
{
if chat=0{chat=1 keyboard_string='' kor_set_kor_eng(set_kor)}
else
{
chat=0
chat_text=keyboard_string+kor_get_koring()
if chat_text!=''
{
var att;
att=instance_create(0,0,obj_chat)
att.target=chr_target
att.text=chat_text
sk_message_save(0,-1)
sk_message_sadd(simple_int,1,13)
sk_message_sadd(simple_string,1,chat_text)
sk_message_send()
}
set_kor=kor_get_kor_eng()
kor_set_kor_eng(kdll_eng)
}
}

if chat
{

kor_backspace()

}

}


if mode_delay=0
{
mode=0
}else{mode_delay-=1}
with(chr_target){if distance_to_object(obj_enemy_mark)&lt;128{system.mode=1 mode_delay=60}}
if pvp_start{mode=1 mode_delay=60}



if job!=quest_out(0)||job_grade!=quest_out(1)
{
job=quest_out(0)
job_grade=quest_out(1)
chr_target.job=job
chr_target.job_grade=job_grade
chr_target.job_send=1
}



if monster_ai_client_set=1
{
monster_ai_client_set=0
sk_message_save(0,0)
sk_message_sadd(simple_int,1,32)
sk_message_send()
}


state_power=s_str*12+s_end*10+s_agi*6+s_per*4+s_int*3

if k_com&gt;=100+(state_power-s_int*4)*0.1
{
k_com=0
s_str+=3
s_end+=1
s_agi+=1
system.save_state=1
}
if k_mas&gt;=100+(state_power-s_int*4)*0.1
{
k_mas=0
s_agi+=2
s_per+=1
system.save_state=1
}
if k_mag&gt;=100+(state_power-s_int*4)*0.1
{
k_mag=0
s_int+=2
system.save_state=1
}
if k_cra&gt;=100+(state_power-s_int*4)*0.1
{
k_cra=0
s_per+=1
s_int+=2
system.save_state=1
}
if k_fis&gt;=100+(state_power-s_int*4)*0.1
{
k_fis=0
s_end+=2
s_per+=2
system.save_state=1
}



if fps_check_del=0
{
fps_check_del=30
var i
for(i=4;i&gt;0;i-=1)
{
fps_save[i]=fps_save[i-1]
}
fps_save[0]=fps
}
else{fps_check_del-=1}

if cont=1
{
var i,fps_sum;
fps_sum=0
for(i=0;i&lt;5;i+=1){fps_sum=max(fps_sum,fps_save[i])}
if fps_sum&lt;30{show_message('������ ���� �����մϴ�. �������� ��Ź�帳�ϴ�.    ') game_end()}
}
cont=0



if keyboard_check_pressed(vk_escape)
{
if inven.open=0 and mail_check=0 and inven.book_open=''
{
save_state=1
save_inventory=1
save_quest_log=1
save_time=0
end_count=10
}
else
{
inven.open=0
inven.book_open=''
}
if trade_player!=0
{
sk_message_save(0,trade_player)
sk_message_sadd(simple_int,1,35)
sk_message_send()
trade_player=0
inven.trade=0
for(i=0;i&lt;4;i+=1){for(j=0;j&lt;2;j+=1)
{
item_add(inven.tr_out[i,j])
}}
}
if inven._shop=1{inven._shop=0}
}

if end_count&gt;0{end_count-=1}
if end_count=0{game_end()}


//mail_check=0
/*
if sk_get_my_ip()='Too frequent!' and acc=0
{
if sk_get_my_ip()!=sk_get_server_ip()
{
//adr_show_message('Ŭ���̾�Ʈ�� ���ÿ� �ϳ��� ����˴ϴ�.',0)
game_end()
}
}
*/

if keyboard_check_pressed(vk_f2){han=(han==0)}
if han=1{kor_set_kor_eng(kdll_kor)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(room)
{
case room_hometown:
{
var att;
att=instance_create(obj_spawn.x+random(128),obj_spawn.y+random(128-16),obj_chr)
att.player=sk_get_my_player_id()
att.name=name
att.sex=gender
att.hair=hair
att.c_hair=c_hair
chr_target=att.id

sk_message_save(0,-1)
sk_message_sadd(simple_int,1,8)
sk_message_sadd(simple_string,1,name)
sk_message_send()
}
break
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_chr)
{
if hp&lt;hp_max
{
draw_sprite(spr_hp,2,x-16,y+16)
draw_sprite_part(spr_hp,1,0,0,max(0,round(32*(hp_hit/hp_max))),5,x-16,y+16)
draw_sprite_part(spr_hp,0,0,0,max(0,round(32*(hp/hp_max))),5,x-16,y+16)
}
sex_set_font(12)
sex_set_halign(fa_middle)
draw_set_color(c_white)
sex_draw_text(round(x),round(y)-32,set_name()+name)
draw_set_color(c_black)
sex_set_halign(fa_left)
}

with(p_monster)
{
if hp&lt;maxhp
{
draw_sprite(spr_hp,1,x-16,y+16)
draw_sprite_part(spr_hp,0,0,0,max(0,32*(hp/maxhp)),5,x-16,y+16)
}/*
sex_set_font(12)
sex_set_halign(fa_middle)
draw_set_color(c_white)
sex_draw_text(round(x),round(y)-32,name)
draw_set_color(c_black)
sex_set_halign(fa_left)*/
}

if mode=1
{
draw_sprite(spr_mode_battle,0,view_xview+320,view_yview+32)
}

if pvp_player_obj!=0 and pvp_start=1
{
with(pvp_player_obj)
{
draw_sprite(spr_pvp_icon,system.option_interface_color,x,y)
}
}

with(p_npc)
{
sex_set_font(12)
sex_set_halign(fa_middle)
draw_set_color(c_white)
sex_draw_text(round(x),round(y)-32,name)
draw_set_color(c_black)
sex_set_halign(fa_left)
}

if chat
{
var _chat;
_chat=keyboard_string+kor_get_koring()
if (t mod 30)&lt;15{_chat+='|'}
draw_sprite(spr_chat_int,0,view_xview,view_yview+480)
sex_set_font(12)
sex_set_valign(fa_bottom)
sex_draw_text(view_xview,view_yview+480,_chat)
sex_set_valign(fa_top)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
